// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Text Renders Correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    alwaysBounceHorizontal={false}
    alwaysBounceVertical={false}
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Object {
        "children": <ForwardRef
          flex={1}
          pt={10}
          px={6}
        >
          <ForwardRef>
            <Markdown
              mb={4}
            />
          </ForwardRef>
          <ForwardRef
            flex={1}
            justifyContent="flex-end"
            pb={6}
          >
            <Button
              label="I Accept T&Cs"
              onPress={[Function]}
              testID="AcceptButton"
              variant="primary"
            />
            <Button
              label="Decline and Exit"
              onPress={[Function]}
              testID="ExitButton"
              variant="exit"
            />
          </ForwardRef>
        </ForwardRef>,
        "minHeight": "100%",
        "paddingBottom": 0,
        "paddingTop": 0,
        "style": Array [
          Object {
            "display": "flex",
          },
        ],
      }
    }
    contentInset={
      Object {
        "bottom": 0,
        "top": 0,
      }
    }
    contentInsetAdjustmentBehavior="never"
    style={
      Array [
        Object {
          "display": "flex",
        },
      ]
    }
  >
    <View>
      <View
        style={
          Array [
            Object {
              "display": "flex",
              "flex": 1,
              "paddingHorizontal": 24,
              "paddingTop": 40,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "display": "flex",
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "display": "flex",
                "flex": 1,
                "justifyContent": "flex-end",
                "paddingBottom": 24,
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 0,
                "flexDirection": "row",
                "opacity": 1,
                "width": "100%",
              }
            }
            testID="AcceptButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                    "width": "100%",
                  },
                  Array [
                    Object {
                      "backgroundColor": "#5E44AE",
                      "borderRadius": 8,
                      "height": 60,
                      "marginTop": 8,
                      "paddingVertical": 16,
                    },
                  ],
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#FFFF",
                      "display": "flex",
                      "fontFamily": "Inter-SemiBold",
                      "fontSize": 20,
                    },
                  ]
                }
              >
                I Accept T&Cs
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 0,
                "flexDirection": "row",
                "opacity": 1,
                "width": "100%",
              }
            }
            testID="ExitButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                    "width": "100%",
                  },
                  Array [
                    Object {
                      "backgroundColor": "#ff4757",
                      "borderRadius": 8,
                      "marginTop": 8,
                      "paddingVertical": 16,
                    },
                  ],
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#FFFF",
                      "display": "flex",
                      "fontFamily": "Inter-SemiBold",
                      "fontSize": 20,
                    },
                  ]
                }
              >
                Decline and Exit
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaProvider>
`;
