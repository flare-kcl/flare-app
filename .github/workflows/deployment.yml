name: Deployment

on: [push]

jobs:
  # Version Management
  versions:
    name: 'Version Management'
    runs-on: macos-latest
    timeout-minutes: 15

    env:
      DEVELOPER_DIR: /Applications/Xcode_12.app

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: olegtarasov/get-tag@v2
        id: tagName
        with:
          # Select 1.3.3 from "v1.3.3"
          tagRegex: 'v(.*)'

      - name: Node
        uses: actions/setup-node@v1

      - name: Install Fastlane
        run: brew install fastlane

      - name: Increment iOS Version
        run: cd ios && fastlane bump $GIT_TAG_NAME && cd ..

      - name: Increment Android Version
        run: cd android && fastlane bump $GIT_TAG_NAME && cd ..

      - name: Print Version Changes (Debug)
        run: git --no-pager diff

      # Cache artifacts for future jobs
      - uses: actions/upload-artifact@v2
        with:
          name: build-config
          path: |
            ./android/app/build.gradle
            ./ios/flare.xcodeproj/project.pbxproj
            ./ios/flare/Info.plist

  # Build script to for iOS apps
  ios:
    name: 'Build iOS App'
    needs: versions
    runs-on: macos-latest
    timeout-minutes: 90

    env:
      DEVELOPER_DIR: /Applications/Xcode_12.app

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Node
        uses: actions/setup-node@v1

      - uses: actions/download-artifact@v2
        with:
          name: build-config

      - name: Install Dependencies
        run: npm install

      - name: Install Fastlane
        run: brew install fastlane

      - name: Create Keychain
        run: |
          security create-keychain -p ${{ secrets.MATCH_PASSWORD }} build.keychain
          security list-keychains -s ~/Library/Keychains/build.keychain
          security default-keychain -s ~/Library/Keychains/build.keychain
          security unlock-keychain -p ${{ secrets.MATCH_PASSWORD }} ~/Library/Keychains/build.keychain

      - name: Install iOS Credentials
        run: cd ios && fastlane match appstore --readonly --verbose --git_url https://${{ secrets.CERTS_ACCESS_TOKEN }}@github.com/flare-kcl/ios-certs --keychain_name build.keychain --keychain_password ${{ secrets.MATCH_PASSWORD }} && cd ..
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      - name: Update Pods
        run: cd ios && pod install

      - name: Deploy Alpha
        run: cd ios && fastlane build --verbose
        env:
          KEYCHAIN_PATH: ~/Library/Keychains/build.keychain
          KEYCHAIN_PASS: ${{ secrets.MATCH_PASSWORD }}

      - name: Cache IPA
        uses: actions/upload-artifact@v2
        with:
          name: ios-build
          path: ./ios/flare.ipa

  # Build script to for Android apps
  android:
    name: 'Build Android App'
    needs: versions
    runs-on: macos-latest
    timeout-minutes: 90

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/download-artifact@v2
        with:
          name: build-config

      - name: Install Dependencies
        run: npm install

      - name: Install JDK 8
        uses: joschi/setup-jdk@v1
        with:
          java-version: 'openjdk8'
          architecture: 'x64'

      - name: Install Fastlane
        run: brew install fastlane

      - name: Build App
        run: cd android && fastlane build --verbose && cd ..

      - name: Print Files
        run: ls ./android/app/build && ls ./android/app/build/outputs/

      - name: Cache APK
        uses: actions/upload-artifact@v2
        with:
          name: android-build
          path: ./android/app/build/outputs/

  # Script to deploy each platform and package as release
  packaging:
    name: 'Packaging'
    needs:
      - android
      - ios
    runs-on: macos-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/download-artifact@v2
        with:
          name: build-config

      - uses: actions/download-artifact@v2
        with:
          name: ios-build

      - uses: actions/download-artifact@v2
        with:
          name: android-build

      - name: Print version Changes (Debug)
        run: git --no-pager diff

      - name: 'Commit Changes'
        run: git add . && git commit -m "Release Commit"
